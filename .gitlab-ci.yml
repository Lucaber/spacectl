stages:
  - test
  - compile
  - publish

go-compile:test:
  image: golang:1.8.3
  stage: test
  before_script:
    - mkdir -p $GOPATH/src/github.com/mittwald
    - ln -nfs $PWD $GOPATH/src/github.com/mittwald/spacectl
    - cd $GOPATH/src/github.com/mittwald/spacectl
  script:
    - go generate
    - go build

.compile-template: &compile_template
  image: golang:1.8.3
  stage: compile
  before_script:
    - mkdir -p $GOPATH/src/github.com/mittwald
    - ln -nfs $PWD $GOPATH/src/github.com/mittwald/spacectl
    - cd $GOPATH/src/github.com/mittwald/spacectl
  script:
    - GOOS=linux go generate
    - CGO_ENABLED=0 go build -o spacectl-${GOOS}-${GOARCH}${EXT} -ldflags "-s" -a -installsuffix cgo
  artifacts:
    paths:
      - ./spacectl-${GOOS}-${GOARCH}${EXT}
  only:
    - tags

go-compile:linux-amd64:
  <<: *compile_template
  variables:
    GOOS: linux
    GOARCH: amd64

go-compile:darwin:
  <<: *compile_template
  variables:
    GOOS: darwin
    GOARCH: amd64

go-compile:windows-amd64:
  <<: *compile_template
  variables:
    GOOS: windows
    GOARCH: amd64
    EXT: .exe

publish:
  stage: publish
  image: python:3.5.3-slim
  before_script:
    - pip install awscli==1.11.117
  script:
    - echo ${CI_BUILD_TAG} > latest.txt
    - aws s3 cp . s3://static.spaces.de/cli/${CI_BUILD_TAG}/ --recursive --exclude "*" --include "spacectl-*" --acl public-read
    - aws s3 cp latest.txt s3://static.spaces.de/cli/latest.txt --acl public-read